version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "kafka-data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTER_0_NAME: local
      KAFKA_CLUSTER_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
  producer-service:
    build:
      context: ./producer-service
      dockerfile: Dockerfile
    container_name: producer-service
    restart: always
    depends_on:
      - kafka
  consumer-service:
    build:
      context: ./consumer-service
      dockerfile: Dockerfile
    container_name: consumer-service
    restart: always
    depends_on:
      - kafka
      - producer-service

volumes:
  kafka-data:
    driver: local